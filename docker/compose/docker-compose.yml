# docker/compose/docker-compose.yml
version: '3.8'

services:
  
  # 1. Backend (Django + Daphne)
  backend:
    build:
      context: ../..
      dockerfile: docker/django/Dockerfile
    container_name: lu_backend_dev
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ../../backend:/usr/src/app
      # Вольюми для медіа (щоб не губились при перезапуску)
      - static_volume:/usr/src/app/staticfiles
      - media_volume:/usr/src/app/mediafiles
    ports:
      - "8000:8000"
    env_file:
      - ../../backend/.env.dev
    depends_on:
      - db
      - redis

  # 2. Frontend (React Dev Server)
  frontend:
    build:
      context: ../..
      dockerfile: docker/react/Dockerfile # Використовує той самий, але ми перевизначимо command
      target: build
    container_name: lu_frontend_dev
    command: npm start
    volumes:
      - ../../frontend:/app
      - /app/node_modules # Важливо: не монтувати локальні node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development

  # 3. База даних
  db:
    image: postgres:15-alpine
    container_name: lu_db_dev
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    ports:
      - "5433:5432" # Мапимо на 5433, щоб не конфліктувати з локальним Postgres
    env_file:
      - ../../backend/.env.dev
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust # Для простоти в dev

  # 4. Redis (для Celery та Channels)
  redis:
    image: redis:7-alpine
    container_name: lu_redis_dev
    ports:
      - "6379:6379"

  # 5. Celery Worker
  celery_worker:
    build:
      context: ../..
      dockerfile: docker/django/Dockerfile # Використовуємо той самий образ, що й backend
    container_name: lu_celery_dev
    command: watchmedo auto-restart --directory=./ --pattern=*.py --recursive -- celery -A config.celery worker -l info
    volumes:
      - ../../backend:/usr/src/app
      - media_volume:/usr/src/app/mediafiles # Потрібен доступ до файлів
    env_file:
      - ../../backend/.env.dev
    depends_on:
      - redis
      - db

volumes:
  postgres_data_dev:
  static_volume:
  media_volume: