# docker/nginx/nginx.conf

# Налаштовуємо upstream для балансування навантаження (Пункт 5)
upstream backend_servers {
    # Docker Swarm/Compose DNS поверне IP-адреси всіх реплік 'backend'
    server backend:8000;
}

# Окремий upstream для WebSocket
upstream websocket_servers {
    # Використовуємо той самий 'backend', але з іншим підходом
    server backend:8000;
}

# Upstream для React-контейнера
upstream frontend_server {
    server frontend:80;
}

# --- HTTP (порт 80) ---
# Редирект всіх HTTP запитів на HTTPS (Пункт 4)
server {
    listen 80;
    server_name localhost; # Замінити на ваш домен

    location / {
        return 301 https://$host$request_uri;
    }

    # Дозволяємо Certbot оновлювати сертифікати
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
}

# --- HTTPS (порт 443) ---
server {
    listen 443 ssl http2;
    server_name localhost; # Замінити на ваш домен
    client_max_body_size 100M;
    # --- Налаштування SSL (Пункт 4) ---
    # Для Production (використовуйте Let's Encrypt)
    # ssl_certificate /etc/letsencrypt/live/ваш-домен.com/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/ваш-домен.com/privkey.pem;

    # Для тестування (самопідписані сертифікати)
    ssl_certificate /etc/nginx/ssl/nginx-selfsigned.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx-selfsigned.key;

    # ... (інші налаштування ssl_protocols, ssl_ciphers) ...

    # --- Обслуговування файлів ---

    # !! ЗМІНЕНО: Проксуємо статичні файли React до frontend сервісу !!
    location ~ ^/static/(css|js|media)/ {
        proxy_pass http://frontend_server; # Використовуємо upstream для frontend
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Статичні файли Django (Admin) - якщо вони вам потрібні
    # Якщо ні, цей блок можна видалити або закоментувати
    location /static/admin/ {
        alias /usr/src/app/staticfiles/admin/;
    }
    # Можливо, знадобляться інші шляхи для Django static, якщо є

    # Медіа-файли (завантажені матриці, результати)
    location /media/ {
        alias /usr/src/app/mediafiles/;
    }

    # --- API (Django REST Framework) ---
    location /api/ {
        proxy_pass http://backend_servers; # Балансування
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # --- WebSockets (Django Channels) ---
    location /ws/ {
        proxy_pass http://websocket_servers; # Пряме з'єднання

        # Налаштування для WebSocket
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_read_timeout 86400; # 1 день
    }

    # --- Frontend (React) ---
    # Всі інші запити йдуть на frontend
    location / {
        proxy_pass http://frontend_server;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}